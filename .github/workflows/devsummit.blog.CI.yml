# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI for Blog Service

on:
  push:
    branches: 
      - main
      - development
      - feature/webhooks
    paths:
      - 'src/DevSummit.Blog/**'
  pull_request:
    branches:
      - main
      - development
    paths:
      - 'src/DevSummit.Blog/**'
  workflow_dispatch:

env:
  TestResultsPath: src/DevSummit.Blog/TestsResults
  PactBrokerUrl: ${{ secrets.PACT_BROKER_URL }}
  PactBrokerUserName: ${{ secrets.PACT_BROKER_USER }}
  PactBrokerPassword: ${{ secrets.PACT_BROKER_PWD }}
  BlogBranch: ${{ github.ref_name }}
  BlogAssemblyVersion: ${{ github.sha }}
  BlogPipelineUrl: ${{ github.event.pull_request.html_url }}
  BlogEnvironmentTag: development
  PactDir: src/DevSummit.Blog/pacts

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore src/DevSummit.sln

    - name: Build
      run: dotnet build  src/DevSummit.Blog/DevSummit.Blog.Consumer.Tests/DevSummit.Blog.Consumer.Tests.csproj --configuration Release --no-restore

    - name: Test
      run: dotnet test src/DevSummit.Blog/DevSummit.Blog.Consumer.Tests/DevSummit.Blog.Consumer.Tests.csproj --configuration Release --no-restore --no-build --verbosity normal --results-directory $TestResultsPath --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

    - name: Check if PR can be completed
      #run: pwsh scripts/canIcompletePR.ps1 ${{ secrets.PACT_BROKER_URL }} Blog ${{ env.BlogAssemblyVersion }} ${{ env.BlogEnvironmentTag }} ${{ secrets.PACT_BROKER_USER }} ${{ secrets.PACT_BROKER_PWD }}
      run: pwsh scripts/canIcompletePR.ps1 "$Env:PactBrokerUrl" Blog "$Env:BlogAssemblyVersion" "$Env:BlogEnvironmentTag" "$Env:PactBrokerUserName" "$Env:PactBrokerPassword"
      shell: pwsh
      
    - name: Copy Test Results
      if: always()
      run: |
        cp -Lpr $TestResultsPath test-results

        echo copied
        ls test-results
      shell: bash

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/linux@v2
      if: always()
      with:
        files: |                    
          test-results/**/*.trx
          test-results/**/*.json          

    - name: Create code coverage report
      if: always()
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:test-results/**/*.cobertura.xml -targetdir:CodeCoverage -reporttypes:'MarkdownSummaryGithub,Cobertura'

    - name: Write to Job Summary
      if: always()  
      run: cat CodeCoverage/SummaryGithub.md >> $GITHUB_STEP_SUMMARY  
